# xth test script
#
# This file is a test script for xth (xic Test Harness).  It
# conforms to the following grammar:
#
#   ScriptFile      ::= Commands+
#   Command         ::= build
#                     | CompilerTest
#   CompilerTest    ::= TestKind (\(TestName\))? ([TestPath])? ("CmdLineArgs")?
#                           { (FileTest;)* }
#   TestKind        ::= xic
#   TestName        ::= LitString
#   FileTest        ::= Filenames Description? FailureSet?
#   Filenames       ::= Filename+
#   Description     ::= LitString
#   FailureSet      ::= Failure (, Failure)*
#   Failure         ::= \( ErrorKind \)
#                     | \( ErrorKind, LitString \)
#
#   TestPath        :   the path to the test files, enclosed in quotes,
#                       relative to the path given in xth's -testpath flag.
#   CmdLineArgs     :   command-line arguments for xic
#   Filename        :   the name of a file, interpreted from TestPath.
#   LitString       :   a literal string, enclosed in quotes.
#   ErrorKind       :   one of, or a unique prefix of one of the following
#                       strings: "Lexical Error", "Syntax Error", or
#                       "Semantic Error".
#
# xth runs the commands in order of appearance.

# build compiler first
build

xic ("Test --help") "--help" {
    ;
}

xic ("Test --lex") ["../pa1"] "--lex" {
    ex1.xi;
    ex2.xi (Lexical, "empty character literal");
    spec1.xi;
    spec2.xi;
    spec3.xi;
    gcd.xi;
    ratadd.xi;
    ratadduse.xi;
    insertionsort.xi;
    arrayinit.xi;
    arrayinit2.xi;
    mdarrays.xi;
    add.xi;
    beauty.xi;
}

xic ("Test --parse") ["../pa2"] "--parse" {
    ex1.xi;
    ex2.xi;
    ex3.xi (Syntax, "Unexpected token +");
    spec1.xi;
    spec2.xi;
    spec3.xi;
    gcd.xi;
    ratadd.xi;
    ratadduse.xi;
    insertionsort.xi;
    arrayinit.xi;
    arrayinit2.xi;
    mdarrays.xi;
    add.xi (Syntax, "Unexpected token +");
    beauty.xi (Syntax, "Unexpected token ==");
}

xic ("Test --typecheck") ["../pa3"] "-libpath $(testpath) --typecheck" {
    ex01.xi;
    ex02.xi;
    ex03.xi;
    ex04.xi (Semantic, "Cannot assign");
    ex05.xi (Semantic, "Operands");
    ex06.xi (Semantic, "Name .* cannot be resolved");
    ex07.xi (Semantic, "Expected .*, but found .*");
    ex08.xi (Semantic, "Missing return");
    ex09.xi (Semantic, "Expected function call");
    ex10.xi (Semantic, "Mismatched number of values");
    ex11.xi (Semantic, "Expected .*, but found .*");
    ex12.xi (Semantic, "not a function");
    spec1-full.xi;
    spec1.xi (Semantic, "Name .* cannot be resolved");
    spec2.xi (Semantic, "Name .* cannot be resolved");
    spec3.xi;
    gcd.xi;
    ratadd-full.xi;
    ratadd.xi (Semantic, "Name .* cannot be resolved");
    ratadduse-full.xi;
    ratadduse.xi (Semantic, "Name .* cannot be resolved");
    insertionsort.xi;
    arrayinit.xi;
    arrayinit2-full.xi;
    arrayinit2.xi (Semantic, "Name .* cannot be resolved");
    mdarrays.xi;
}

xic ("Test --irgen") ["../pa4"] "-libpath $(testpath) --irgen" {
    ex01.xi;
    ack.xi;
    primes.xi;
}

xic ("Test --irgen -O") ["../pa4"] "-libpath $(testpath) --irgen -O" {
    ex01.xi;
    ack.xi;
    primes.xi;
}

xic ("Test -target linux") ["../customPA5"] "-libpath $(testpath) -target linux" {
    ack.xi;
    arracc01.xi;
    arracc02.xi;
    arracc03.xi;
    arracc04.xi;
    arracc05.xi;
    arracc06.xi;
    arracc07.xi;
    arracc08.xi;
    array05.xi;
    arrinit05.xi;
    arrinit06.xi;
    assign01.xi;
    assign02.xi;
    assign03.xi;
    assign04.xi;
    assign05.xi;
    assign06.xi;
    assign07.xi;
    assign08.xi;
    assign09.xi;
    assign10.xi;
    binary02.xi;
    binary04.xi;
    binary06.xi;
    binary07.xi;
    binary08.xi;
    binary09.xi;
    binary10.xi;
    binary11.xi;
    binary12.xi;
    ex01.xi;
    functioncall03.xi;
    functioncall04.xi;
    group_of_anonymous01__side_effect.xi;
    group_of_anonymous02__dimensions.xi;
    group_of_anonymous02__euler.xi;
    group_of_anonymous02__sieve.xi;
    group_of_anonymous03__concat.xi;
    group_of_anonymous03__mult_call.xi;
    group_of_anonymous03__wildcard.xi;
    group_of_anonymous04__multipleReturns.xi;
    group_of_anonymous04__recursiveCalls.xi;
    group_of_anonymous05__ir_big_function.xi;
    group_of_anonymous05__ir_hi_mult.xi;
    group_of_anonymous06__func_inside_array_inside_func.xi;
    group_of_anonymous06__hard.xi;
    group_of_anonymous06__matrix.xi;
    group_of_anonymous06__multiassign4.xi;
    group_of_anonymous06__short_circuit_test.xi;
    group_of_anonymous07__attack_arith.xi;
    group_of_anonymous08__easytest.xi;
    group_of_anonymous08__trivialtest.xi;
    group_of_anonymous09__divideext.xi;
    group_of_anonymous09__fastSquareRoot.xi;
    group_of_anonymous09__hanoi.xi;
    group_of_anonymous09__poison.xi;
    if05.xi;
    if06.xi;
    if07.xi;
    if08.xi;
    if09.xi;
    if10.xi;
    localdecl01.xi;
    localdecl03.xi;
    localdecl04.xi;
    localdecl05.xi;
    localdecl06.xi;
    localdecl09.xi;
    localdecl10.xi;
    localdecl11.xi;
    localdecl12.xi;
    localdecl13.xi;
    localdecl14.xi;
    medley01.xi;
    primes.xi;
    procedurecall02.xi;
    procedurecall04.xi;
    procedurecall05.xi;
    procedurecall06.xi;
    unary02.xi;
    unary04.xi;
    while02.xi;
    while03.xi;
    while04.xi;
}

xic ("Test -target linux -O") ["../customPA5"] "-libpath $(testpath) -target linux -O" {
    ack.xi;
    arracc01.xi;
    arracc02.xi;
    arracc03.xi;
    arracc04.xi;
    arracc05.xi;
    arracc06.xi;
    arracc07.xi;
    arracc08.xi;
    array05.xi;
    arrinit05.xi;
    arrinit06.xi;
    assign01.xi;
    assign02.xi;
    assign03.xi;
    assign04.xi;
    assign05.xi;
    assign06.xi;
    assign07.xi;
    assign08.xi;
    assign09.xi;
    assign10.xi;
    binary02.xi;
    binary04.xi;
    binary06.xi;
    binary07.xi;
    binary08.xi;
    binary09.xi;
    binary10.xi;
    binary11.xi;
    binary12.xi;
    ex01.xi;
    functioncall03.xi;
    functioncall04.xi;
    group_of_anonymous01__side_effect.xi;
    group_of_anonymous02__dimensions.xi;
    group_of_anonymous02__euler.xi;
    group_of_anonymous02__sieve.xi;
    group_of_anonymous03__concat.xi;
    group_of_anonymous03__mult_call.xi;
    group_of_anonymous03__wildcard.xi;
    group_of_anonymous04__multipleReturns.xi;
    group_of_anonymous04__recursiveCalls.xi;
    group_of_anonymous05__ir_big_function.xi;
    group_of_anonymous05__ir_hi_mult.xi;
    group_of_anonymous06__func_inside_array_inside_func.xi;
    group_of_anonymous06__hard.xi;
    group_of_anonymous06__matrix.xi;
    group_of_anonymous06__multiassign4.xi;
    group_of_anonymous06__short_circuit_test.xi;
    group_of_anonymous07__attack_arith.xi;
    group_of_anonymous08__easytest.xi;
    group_of_anonymous08__trivialtest.xi;
    group_of_anonymous09__divideext.xi;
    group_of_anonymous09__fastSquareRoot.xi;
    group_of_anonymous09__hanoi.xi;
    group_of_anonymous09__poison.xi;
    if05.xi;
    if06.xi;
    if07.xi;
    if08.xi;
    if09.xi;
    if10.xi;
    localdecl01.xi;
    localdecl03.xi;
    localdecl04.xi;
    localdecl05.xi;
    localdecl06.xi;
    localdecl09.xi;
    localdecl10.xi;
    localdecl11.xi;
    localdecl12.xi;
    localdecl13.xi;
    localdecl14.xi;
    medley01.xi;
    primes.xi;
    procedurecall02.xi;
    procedurecall04.xi;
    procedurecall05.xi;
    procedurecall06.xi;
    unary02.xi;
    unary04.xi;
    while02.xi;
    while03.xi;
    while04.xi;
}

